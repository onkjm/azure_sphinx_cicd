# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
#  vmImage: macOS-latest
  name: mac

strategy:
  matrix:
    Python311:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    /bin/bash ./script.sh $(MEI_HOST) $(MEI_KEY)
  displayName: 'run script'
  
#- script: |
#    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#  displayName: 'Install homebrew'

#- script: 
#    /opt/homebrew/bin/brew install pandoc
#  displayName: 'Install pandoc'

- script:
    export PATH="/opt/homebrew/bin/pandoc:$PATH"
    which pandoc
  displayName: 'set path to pandoc'

- script: 
    make html
  displayName: 'make html'

- script:
    cp -R $(Agent.BuildDirectory)/s/build/html/* /usr/local/var/www/myapi/
  displayName: 'deploy html'

- script:
    /opt/homebrew/bin/nginx -s reload
  displayName: 'restart nginx'

- script:
    export MEILISEARCH_HOST_URL=$(MEI_HOST)
    export MEILISEARCH_API_KEY=$(MEI_KEY)
    set
  displayName: 'set env vars'

- script: 
    cd docs-scraper
    git clone https://github.com/meilisearch/docs-scraper
    cd docs-scraper
    pip install pipenv
    pipenv install
    pipenv run ./docs-scraper ../myapi.json
  displayName: 'docs scraping'

